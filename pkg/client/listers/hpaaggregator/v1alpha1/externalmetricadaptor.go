// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/kubewharf/kubeadmiral/pkg/apis/hpaaggregator/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ExternalMetricAdaptorLister helps list ExternalMetricAdaptors.
// All objects returned here must be treated as read-only.
type ExternalMetricAdaptorLister interface {
	// List lists all ExternalMetricAdaptors in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ExternalMetricAdaptor, err error)
	// ExternalMetricAdaptors returns an object that can list and get ExternalMetricAdaptors.
	ExternalMetricAdaptors(namespace string) ExternalMetricAdaptorNamespaceLister
	ExternalMetricAdaptorListerExpansion
}

// externalMetricAdaptorLister implements the ExternalMetricAdaptorLister interface.
type externalMetricAdaptorLister struct {
	indexer cache.Indexer
}

// NewExternalMetricAdaptorLister returns a new ExternalMetricAdaptorLister.
func NewExternalMetricAdaptorLister(indexer cache.Indexer) ExternalMetricAdaptorLister {
	return &externalMetricAdaptorLister{indexer: indexer}
}

// List lists all ExternalMetricAdaptors in the indexer.
func (s *externalMetricAdaptorLister) List(selector labels.Selector) (ret []*v1alpha1.ExternalMetricAdaptor, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ExternalMetricAdaptor))
	})
	return ret, err
}

// ExternalMetricAdaptors returns an object that can list and get ExternalMetricAdaptors.
func (s *externalMetricAdaptorLister) ExternalMetricAdaptors(namespace string) ExternalMetricAdaptorNamespaceLister {
	return externalMetricAdaptorNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ExternalMetricAdaptorNamespaceLister helps list and get ExternalMetricAdaptors.
// All objects returned here must be treated as read-only.
type ExternalMetricAdaptorNamespaceLister interface {
	// List lists all ExternalMetricAdaptors in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ExternalMetricAdaptor, err error)
	// Get retrieves the ExternalMetricAdaptor from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ExternalMetricAdaptor, error)
	ExternalMetricAdaptorNamespaceListerExpansion
}

// externalMetricAdaptorNamespaceLister implements the ExternalMetricAdaptorNamespaceLister
// interface.
type externalMetricAdaptorNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ExternalMetricAdaptors in the indexer for a given namespace.
func (s externalMetricAdaptorNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ExternalMetricAdaptor, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ExternalMetricAdaptor))
	})
	return ret, err
}

// Get retrieves the ExternalMetricAdaptor from the indexer for a given namespace and name.
func (s externalMetricAdaptorNamespaceLister) Get(name string) (*v1alpha1.ExternalMetricAdaptor, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("externalmetricadaptor"), name)
	}
	return obj.(*v1alpha1.ExternalMetricAdaptor), nil
}
